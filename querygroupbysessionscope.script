//Script GUID:f8c9d618-6b08-4f64-a356-a212555e6301
//Used for tracking history

#DECLARE startdate string = @"2017-06-19";
#DECLARE enddate string = @"2017-06-19";
#DECLARE output string = "/my/xSLAPI/usen_queries_20170619.tsv";
#DECLARE outputraw string = "/my/xSLAPI/usen_queries_20170619_source.tsv";

xSLAPI = 
VIEW @"/shares/searchDM/distrib/released/xSLAPI/xSLAPI.view"
PARAMS
(
    Start = @startdate,
    End = @enddate,
    Dataset = @"Bing.com",
    Traffic = "Normal",
    QueryType = "All"
);

rs0 =
    SELECT Query_RawQuery,
                    SessionId,
                    Market,
                    QueryIsNormal,
                    AlteredQuery,
                    UserAnid
    FROM xSLAPI
    WHERE
    Market == "en-US"
    AND String.IsNullOrWhiteSpace(UserAnid) == false
    AND String.IsNullOrWhiteSpace(SessionId) == false
    AND String.IsNullOrWhiteSpace(Query_RawQuery) == false;

rs1 = SELECT
        Util.ListToString(LIST(Query_RawQuery)) AS Queries
        ,SessionId
    FROM rs0
    GROUP BY SessionId
    WHERE String.IsNullOrWhiteSpace(Query_RawQuery) == false;


OUTPUT rs0 TO @outputraw;

OUTPUT rs1
TO @output;

#CS

using System;

public static class Util
{
    public static Regex nonAlphaRegex = new Regex("[^a-z0-9\\s]");
    public static Regex whitespaceBlockRegex = new Regex("[\\s]+");
    public static string ListToString(IEnumerable<string> queries)
    {
        var stripGarbage = queries
            .Select(
                q => {
                    q = nonAlphaRegex.Replace(q.ToLower(),"");
                    q = whitespaceBlockRegex.Replace(q, " ");
                    return q;
                })
            .Where(q => q != null && q.Equals("")==false && q.Equals(" ")==false);
        string output = string.Join("|",stripGarbage.ToArray());

        return output;
    }
}

#ENDCS

// Generated by ScopeStudio, version 2.0.9560.0
